// Swipe Handler –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤–∞–∫–∞–Ω—Å–∏–π
(function() {
    'use strict';

    let isInitialized = false;

    // Haptic Feedback –¥–ª—è Telegram WebApp (—Ç—Ä–µ–±—É–µ—Ç Bot API 6.1+)
    function triggerHaptic(type, style) {
        try {
            const webApp = window.Telegram?.WebApp;
            if (!webApp?.HapticFeedback) return;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é (HapticFeedback –¥–æ—Å—Ç—É–ø–µ–Ω —Å –≤–µ—Ä—Å–∏–∏ 6.1+)
            const version = parseFloat(webApp.version || '6.0');
            if (version < 6.1) return;
            
            switch (type) {
                case 'impact':
                    webApp.HapticFeedback.impactOccurred(style || 'light');
                    break;
                case 'notification':
                    webApp.HapticFeedback.notificationOccurred(style || 'success');
                    break;
                case 'selection':
                    webApp.HapticFeedback.selectionChanged();
                    break;
            }
        } catch (e) {
            // –¢–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ - –Ω–µ –≤—Å–µ –≤–µ—Ä—Å–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç
        }
    }

    function initSwipeHandler() {
        if (typeof interact === 'undefined') {
            console.warn('interact.js –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return;
        }

        const cards = document.querySelectorAll('.vacancy-card');
        
        if (cards.length === 0) {
            setTimeout(() => initSwipeHandler(), 1000);
            return;
        }

        if (isInitialized) return;
        isInitialized = true;

        interact('.vacancy-card').draggable({
            allowFrom: '.vacancy-card',
            ignoreFrom: 'button, a, input, .summary, .info-value, .full-text',
            // –ú–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö
            startAxis: 'xy',
            lockAxis: 'start',
            // –£–º–µ–Ω—å—à–∞–µ–º –ø–æ—Ä–æ–≥ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
            threshold: 8,
            listeners: {
                start(event) {
                    // –£–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–≤–∞–π–ø–∞
                    event.target.style.transition = 'none';
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ touch-action: none
                    event.target.classList.add('swiping');
                    event.target.style.zIndex = '100';
                    // –õ–µ–≥–∫–∞—è —Ç–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ—Ç–¥–∞—á–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —Å–≤–∞–π–ø–∞
                    triggerHaptic('selection');
                },
                move(event) {
                    const dx = event.pageX - event.x0;
                    const dy = event.pageY - event.y0;
                    const absX = Math.abs(dx);
                    const absY = Math.abs(dy);
                    const deleteOverlay = event.target.querySelector('.swipe-action-overlay.delete');
                    const favoriteOverlay = event.target.querySelector('.swipe-action-overlay.favorite');
                    const unfavoriteOverlay = event.target.querySelector('.swipe-action-overlay.unfavorite');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                    const isOnFavoritesPage = window.location.pathname.includes('favorites.html') || 
                                            document.querySelector('#favorites-list') !== null;

                    // –ü–ª–∞–≤–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å –∑–∞—Ç—É—Ö–∞–Ω–∏–µ–º - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–∞
                    const maxMove = 160;
                    const resistance = 0.8;
                    let limitedDx;
                    
                    if (absX <= maxMove) {
                        limitedDx = dx;
                    } else {
                        const excess = absX - maxMove;
                        const resistedExcess = excess * resistance;
                        limitedDx = dx > 0 ? maxMove + resistedExcess : -(maxMove + resistedExcess);
                    }

                    // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
                    event.target.style.transform = `translate3d(${limitedDx}px, 0, 0)`;

                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlays –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ > 60px –¥–ª—è —á–µ—Ç–∫–æ–≥–æ –≤–∏–∑—É–∞–ª–∞
                    if (absX > 60) {
                        if (dx < 0) {
                            // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - –≤—Å–µ–≥–¥–∞ —É–¥–∞–ª–µ–Ω–∏–µ
                            event.target.classList.add('swipe-left');
                            event.target.classList.remove('swipe-right');
                            if (deleteOverlay) deleteOverlay.classList.add('visible');
                            if (favoriteOverlay) favoriteOverlay.classList.remove('visible');
                            if (unfavoriteOverlay) unfavoriteOverlay.classList.remove('visible');
                        } else {
                            // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                            event.target.classList.add('swipe-right');
                            event.target.classList.remove('swipe-left');
                            if (deleteOverlay) deleteOverlay.classList.remove('visible');
                            
                            if (isOnFavoritesPage) {
                                // –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ - —É–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                                if (unfavoriteOverlay) unfavoriteOverlay.classList.add('visible');
                                if (favoriteOverlay) favoriteOverlay.classList.remove('visible');
                            } else {
                                // –ù–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                                if (favoriteOverlay) favoriteOverlay.classList.add('visible');
                                if (unfavoriteOverlay) unfavoriteOverlay.classList.remove('visible');
                            }
                        }
                    } else {
                        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ overlays
                        event.target.classList.remove('swipe-left', 'swipe-right');
                        if (deleteOverlay) deleteOverlay.classList.remove('visible');
                        if (favoriteOverlay) favoriteOverlay.classList.remove('visible');
                        if (unfavoriteOverlay) unfavoriteOverlay.classList.remove('visible');
                    }
                },
                end(event) {
                    const card = event.target;
                    const dx = event.pageX - event.x0;
                    const absX = Math.abs(dx);
                    const deleteBtn = card.querySelector('[data-action="delete"]');
                    const favoriteBtn = card.querySelector('[data-action="favorite"]');
                    const deleteOverlay = card.querySelector('.swipe-action-overlay.delete');
                    const favoriteOverlay = card.querySelector('.swipe-action-overlay.favorite');
                    const unfavoriteOverlay = card.querySelector('.swipe-action-overlay.unfavorite');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                    const isOnFavoritesPage = window.location.pathname.includes('favorites.html') || 
                                            document.querySelector('#favorites-list') !== null;

                    // CSS touch-action –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞—Å—Å–∞ .swiping

                    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã –∏ overlays
                    card.classList.remove('swiping', 'swipe-left', 'swipe-right');
                    if (deleteOverlay) deleteOverlay.classList.remove('visible');
                    if (favoriteOverlay) favoriteOverlay.classList.remove('visible');
                    if (unfavoriteOverlay) unfavoriteOverlay.classList.remove('visible');
                    card.style.zIndex = '';

                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –ø–∞–ª—å—Ü–∞
                    const isQuickSwipe = event.speed && event.speed > 0.5;
                    const threshold = isQuickSwipe ? 70 : 90;
                    
                    if (absX > threshold) {
                        if (dx < 0 && deleteBtn) {
                            // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - –≤—Å–µ–≥–¥–∞ —É–¥–∞–ª–µ–Ω–∏–µ
                            if (deleteOverlay) deleteOverlay.classList.add('visible');
                            card.style.transition = 'transform 0.4s ease-out, opacity 0.4s ease-out';
                            card.style.transform = 'translate3d(-100%, 0, 0)';
                            card.style.opacity = '0';
                            // –°—Ä–µ–¥–Ω–∏–π —É–¥–∞—Ä –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                            triggerHaptic('impact', 'medium');
                            // –í—ã–∑—ã–≤–∞–µ–º updateVacancyStatus —Å —Ñ–ª–∞–≥–æ–º isFromSwipe –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–º–µ–Ω—ã
                            setTimeout(() => {
                                console.log('üóëÔ∏è –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:', deleteBtn.dataset.id);
                                if (window.vacancyManager && window.vacancyManager.updateVacancyStatus) {
                                    console.log('‚úÖ –í—ã–∑—ã–≤–∞–µ–º vacancyManager.updateVacancyStatus —Å isFromSwipe=true');
                                    window.vacancyManager.updateVacancyStatus(deleteBtn.dataset.id, 'deleted', true);
                                } else {
                                    console.log('‚ö†Ô∏è vacancyManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                                    deleteBtn.click();
                                }
                            }, 400);
                        } else if (dx > 0) {
                            // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                            if (isOnFavoritesPage && favoriteBtn) {
                                // –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ - —É–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–≤–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ)
                                if (unfavoriteOverlay) unfavoriteOverlay.classList.add('visible');
                                card.style.transition = 'transform 0.4s ease-out, opacity 0.4s ease-out';
                                card.style.transform = 'translate3d(100%, 0, 0)';
                                card.style.opacity = '0';
                                // –£—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ
                                triggerHaptic('notification', 'success');
                                setTimeout(() => favoriteBtn.click(), 400); // –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–Ω–æ–ø–∫–∞ favorite –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ
                            } else if (!isOnFavoritesPage && favoriteBtn) {
                                // –ù–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                                if (favoriteOverlay) favoriteOverlay.classList.add('visible');
                                card.style.transition = 'transform 0.4s ease-out, opacity 0.4s ease-out';
                                card.style.transform = 'translate3d(100%, 0, 0)';
                                card.style.opacity = '0';
                                // –£—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                                triggerHaptic('notification', 'success');
                                // –í—ã–∑—ã–≤–∞–µ–º updateVacancyStatus —Å —Ñ–ª–∞–≥–æ–º isFromSwipe –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–º–µ–Ω—ã
                                setTimeout(() => {
                                    console.log('‚ù§Ô∏è –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', favoriteBtn.dataset.id);
                                    if (window.vacancyManager && window.vacancyManager.updateVacancyStatus) {
                                        console.log('‚úÖ –í—ã–∑—ã–≤–∞–µ–º vacancyManager.updateVacancyStatus —Å isFromSwipe=true');
                                        window.vacancyManager.updateVacancyStatus(favoriteBtn.dataset.id, 'favorite', true);
                                    } else {
                                        console.log('‚ö†Ô∏è vacancyManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                                        favoriteBtn.click();
                                    }
                                }, 400);
                            } else {
                                // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –º–µ—Å—Ç–æ –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–Ω–æ–ø–∫–∏
                                card.style.transition = 'transform 0.3s ease-out';
                                card.style.transform = 'translate3d(0, 0, 0)';
                            }
                        } else {
                            // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –º–µ—Å—Ç–æ —Å –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º
                            card.style.transition = 'transform 0.3s ease-out';
                            card.style.transform = 'translate3d(0, 0, 0)';
                        }
                    } else {
                        // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –º–µ—Å—Ç–æ —Å –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º
                        card.style.transition = 'transform 0.3s ease-out';
                        card.style.transform = 'translate3d(0, 0, 0)';
                    }
                }
            }
        });

        // –°–±—Ä–æ—Å –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('visibilitychange', () => {
            if (document.visibilityState === 'hidden') {
                document.querySelectorAll('.vacancy-card.swiping').forEach(card => {
                    card.classList.remove('swiping', 'swipe-left', 'swipe-right');
                    card.style.transform = 'translate3d(0, 0, 0)';
                    card.style.zIndex = '';
                });
            }
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º overlay –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å–≤–∞–π–ø–æ–≤
    function addSwipeOverlays() {
        document.querySelectorAll('.vacancy-card').forEach(card => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ overlays
            if (card.querySelector('.swipe-action-overlay')) return;

            // Overlay –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—Å–≤–∞–π–ø –≤–ª–µ–≤–æ)
            const deleteOverlay = document.createElement('div');
            deleteOverlay.className = 'swipe-action-overlay delete';
            const deleteIcon = document.createElement('div');
            deleteIcon.className = 'pixel-icon delete';
            deleteOverlay.appendChild(deleteIcon);
            card.appendChild(deleteOverlay);

            // Overlay –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (—Å–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
            const favoriteOverlay = document.createElement('div');
            favoriteOverlay.className = 'swipe-action-overlay favorite';
            const favoriteIcon = document.createElement('div');
            favoriteIcon.className = 'pixel-icon favorite';
            favoriteOverlay.appendChild(favoriteIcon);
            card.appendChild(favoriteOverlay);

            // Overlay –¥–ª—è —É–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (—Å–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ)
            const unfavoriteOverlay = document.createElement('div');
            unfavoriteOverlay.className = 'swipe-action-overlay unfavorite';
            const unfavoriteIcon = document.createElement('div');
            unfavoriteIcon.className = 'pixel-icon unfavorite';
            unfavoriteOverlay.appendChild(unfavoriteIcon);
            card.appendChild(unfavoriteOverlay);
        });
    }

    function initForNewCards() {
        if (typeof interact === 'undefined') return;
        addSwipeOverlays();
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
        // –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ –≥–¥–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        interact('.vacancy-card').unset();
        isInitialized = false;
        initSwipeHandler();
    }

    function setupSwipes() {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Telegram WebApp –≤–µ—Ä—Å–∏–∏ 6.0
        if (window.Telegram?.WebApp) {
            try {
                window.Telegram.WebApp.expand();
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
                const version = parseFloat(window.Telegram.WebApp.version || '6.0');
                
                // setHeaderColor –¥–æ—Å—Ç—É–ø–µ–Ω —Å –≤–µ—Ä—Å–∏–∏ 6.1+
                if (version >= 6.1 && window.Telegram.WebApp.setHeaderColor) {
                    window.Telegram.WebApp.setHeaderColor('#F0F0F0');
                }
                
                // disableVerticalSwipes –¥–æ—Å—Ç—É–ø–µ–Ω —Å –≤–µ—Ä—Å–∏–∏ 6.9+
                if (version >= 6.9 && window.Telegram.WebApp.disableVerticalSwipes) {
                    window.Telegram.WebApp.disableVerticalSwipes();
                }
            } catch (e) {
                console.debug('Telegram WebApp API error:', e.message);
            }
        }

        // CSS touch-action –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        
        initSwipeHandler();
        addSwipeOverlays();
        
        const observer = new MutationObserver(() => {
            addSwipeOverlays();
            initForNewCards();
        });
        
        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ —Å–ø–∏—Å–∫–∞—Ö –≤–∞–∫–∞–Ω—Å–∏–π
        const listsToObserve = [
            ...document.querySelectorAll('.vacancy-list'),
            document.getElementById('favorites-list'),
            document.getElementById('vacancies-list')
        ].filter(Boolean);
        
        listsToObserve.forEach(list => {
            observer.observe(list, { childList: true, subtree: true });
        });
    }

    function init() {
        if (typeof interact !== 'undefined') {
            setupSwipes();
        }
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }

    window.addEventListener('interactLoaded', () => {
        if (typeof interact !== 'undefined') {
            setupSwipes();
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–Ω—É–∂–Ω–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É)
    function reinitialize() {
        console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SwipeHandler');
        isInitialized = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ interact –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (typeof interact !== 'undefined') {
            interact('.vacancy-card').unset();
        }
        
        // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        initSwipeHandler();
        addSwipeOverlays();
        initForNewCards();
        
        console.log('‚úÖ SwipeHandler –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
    window.SwipeHandler = {
        init: initSwipeHandler,
        addOverlays: addSwipeOverlays,
        initForNewCards: initForNewCards,
        reinitialize: reinitialize
    };
})();