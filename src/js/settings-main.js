// Settings page entry point –¥–ª—è Vite
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏

// 1. –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏
import './csp-manager.js';
import './env-dev.js';
import './env-config.js';
import './config.js';
import './utils.min.js'; // –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è window.utils
import './debug-logger.js'; // –£–º–Ω—ã–π –ª–æ–≥–≥–µ—Ä
import './error-monitor.js';
import './error-helpers.js';

// 2. UI –º–æ–¥—É–ª–∏  
import './theme-manager.js';
import './bot-integration.js';

// 3. Settings –º–æ–¥—É–ª–∏
import { SettingsMain } from '../modules/SettingsMain.js';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', async function() {
  console.log('‚öôÔ∏è Settings page initialized via Vite');
  
  if (window.cspManager) {
    window.cspManager.init();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SettingsMain –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  try {
    console.log('üîÑ Starting settings initialization...');
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    await new Promise(resolve => setTimeout(resolve, 100));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if (!window.APP_CONFIG || !window.utils) {
      console.error('‚ùå Dependencies not loaded:', {
        APP_CONFIG: !!window.APP_CONFIG,
        utils: !!window.utils
      });
      return;
    }
    
    console.log('üöÄ Dependencies loaded successfully!');
    console.log('APP_CONFIG keys:', Object.keys(window.APP_CONFIG));
    console.log('utils keys:', Object.keys(window.utils));
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('üèóÔ∏è Creating SettingsMain instance...');
    window.settingsApp = new SettingsMain();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é (–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
    console.log('üîÑ Initializing settings manually...');
    await window.settingsApp.init();
    
    // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    let attempts = 0;
    while (!window.settingsApp.initialized && attempts < 50) {
      await new Promise(resolve => setTimeout(resolve, 100));
      attempts++;
    }
    
    if (window.settingsApp.initialized) {
      console.log('‚úÖ Settings initialized successfully:', window.settingsApp.getStats());
    } else {
      console.error('‚ùå Settings initialization timeout');
    }
    
  } catch (error) {
    console.error('‚ùå Settings initialization error:', error);
  }
});