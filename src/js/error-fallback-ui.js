// error-fallback-ui.js - Fallback UI –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫

(function() {
  'use strict';

  class ErrorFallbackUI {
    constructor() {
      this.errorCount = 0;
      this.maxErrors = 3; // –ü–æ—Å–ª–µ 3 –æ—à–∏–±–æ–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback UI
      this.errorWindow = 5000; // –û–∫–Ω–æ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—à–∏–±–æ–∫
      this.errorTimestamps = [];
      this.init();
    }

    init() {
      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
      window.addEventListener('error', this.handleError.bind(this));
      window.addEventListener('unhandledrejection', this.handleRejection.bind(this));

      console.log('‚úÖ [Error Fallback] Error Fallback UI initialized');
    }

    handleError(event) {
      this.recordError();
      this.checkErrorThreshold();
    }

    handleRejection(event) {
      this.recordError();
      this.checkErrorThreshold();
    }

    recordError() {
      const now = Date.now();
      this.errorTimestamps.push(now);

      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ—à–∏–±–∫–∏ –≤–Ω–µ –æ–∫–Ω–∞
      this.errorTimestamps = this.errorTimestamps.filter(
        timestamp => now - timestamp < this.errorWindow
      );
    }

    checkErrorThreshold() {
      if (this.errorTimestamps.length >= this.maxErrors) {
        this.showFallbackUI('–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      }
    }

    showFallbackUI(message) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ UI –µ—â–µ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω
      if (document.getElementById('error-fallback-overlay')) {
        return;
      }

      // –°–æ–∑–¥–∞–µ–º overlay —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
      const overlay = document.createElement('div');
      overlay.id = 'error-fallback-overlay';
      overlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
        z-index: 999999;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        animation: fadeIn 0.3s ease-in-out;
      `;

      overlay.innerHTML = `
        <style>
          @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
          }
          @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
          }
          .error-icon {
            font-size: 64px;
            margin-bottom: 24px;
            animation: pulse 2s infinite;
          }
          .error-title {
            margin: 0 0 16px 0;
            font-size: 28px;
            font-weight: 600;
            text-align: center;
          }
          .error-message {
            margin: 0 0 32px 0;
            color: #ccc;
            font-size: 16px;
            text-align: center;
            max-width: 400px;
            line-height: 1.6;
          }
          .error-actions {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
            justify-content: center;
          }
          .error-btn {
            background: #007bff;
            color: white;
            border: none;
            padding: 14px 28px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
          }
          .error-btn:hover {
            background: #0056b3;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4);
          }
          .error-btn:active {
            transform: translateY(0);
          }
          .error-btn-secondary {
            background: #6c757d;
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
          }
          .error-btn-secondary:hover {
            background: #545b62;
            box-shadow: 0 6px 16px rgba(108, 117, 125, 0.4);
          }
          .error-details {
            margin-top: 24px;
            padding: 16px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            max-width: 500px;
            font-size: 13px;
            color: #999;
            text-align: left;
          }
          .error-detail-item {
            margin: 8px 0;
            display: flex;
            justify-content: space-between;
            gap: 16px;
          }
          .error-detail-label {
            font-weight: 500;
            color: #ccc;
          }
        </style>
        <div style="text-align: center; padding: 32px; max-width: 600px;">
          <div class="error-icon">‚ö†Ô∏è</div>
          <h2 class="error-title">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</h2>
          <p class="error-message">${message}</p>
          <div class="error-actions">
            <button
              class="error-btn"
              onclick="window.location.reload()"
            >
              üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
            <button
              class="error-btn error-btn-secondary"
              onclick="window.location.href = window.location.origin + window.location.pathname"
            >
              üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </button>
          </div>
          <div class="error-details">
            <div class="error-detail-item">
              <span class="error-detail-label">–û—à–∏–±–æ–∫:</span>
              <span>${this.errorTimestamps.length}</span>
            </div>
            <div class="error-detail-item">
              <span class="error-detail-label">–í—Ä–µ–º—è:</span>
              <span>${new Date().toLocaleTimeString('ru-RU')}</span>
            </div>
            <div class="error-detail-item">
              <span class="error-detail-label">–ë—Ä–∞—É–∑–µ—Ä:</span>
              <span>${this.getBrowserName()}</span>
            </div>
          </div>
        </div>
      `;

      document.body.appendChild(overlay);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ error monitor
      if (window.errorMonitor) {
        window.errorMonitor.reportCustomError('Critical error threshold exceeded', {
          errorCount: this.errorTimestamps.length,
          message: message
        });
      }
    }

    getBrowserName() {
      const ua = navigator.userAgent;
      if (ua.includes('Firefox')) return 'Firefox';
      if (ua.includes('Chrome')) return 'Chrome';
      if (ua.includes('Safari')) return 'Safari';
      if (ua.includes('Edge')) return 'Edge';
      return 'Unknown';
    }

    reset() {
      this.errorTimestamps = [];
      const overlay = document.getElementById('error-fallback-overlay');
      if (overlay) {
        overlay.remove();
      }
    }

    getStats() {
      return {
        errorCount: this.errorTimestamps.length,
        maxErrors: this.maxErrors,
        errorWindow: this.errorWindow,
        recentErrors: this.errorTimestamps
      };
    }
  }

  // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
  window.errorFallbackUI = new ErrorFallbackUI();

  // Expose –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  window.ErrorFallbackUI = ErrorFallbackUI;

})();
